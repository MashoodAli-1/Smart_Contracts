{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red79\green122\blue61;\red255\green255\blue255;\red172\green173\blue193;
\red71\green137\blue205;\red212\green212\blue212;\red167\green197\blue151;\red45\green175\blue118;\red238\green114\blue173;
\red17\green112\blue148;\red31\green133\blue64;\red16\green91\blue166;}
{\*\expandedcolortbl;;\cssrgb\c37609\c54466\c30476;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c73059\c73457\c80033;
\cssrgb\c33936\c61427\c84130;\cssrgb\c86370\c86370\c86262;\cssrgb\c71008\c80807\c65805;\cssrgb\c19586\c72947\c53683;\cssrgb\c95320\c54126\c73246;
\cssrgb\c3457\c51349\c64890;\cssrgb\c12866\c57979\c31656;\cssrgb\c4704\c43972\c71082;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh14820\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs22 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // SPDX-License-Identifier: GPL-3.0\cf4 \strokec4 \
\
\cf5 \strokec5 pragma\cf4 \strokec4  \cf5 \strokec5 solidity\cf4 \strokec4  \cf6 \strokec6 >=\cf7 \strokec7 0.5.0\cf4 \strokec4  \cf6 \strokec6 <\cf7 \strokec7 0.9.0\cf6 \strokec6 ;\cf4 \strokec4 \
\
\cf5 \strokec5 contract\cf4 \strokec4  Lottery\cf6 \strokec6 \{\cf4 \strokec4 \
    \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  manager\cf6 \strokec6 ;\cf4 \strokec4 \
    \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 payable\cf6 \strokec6 []\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  participants\cf6 \strokec6 ;\cf4 \strokec4   \cf2 \strokec2 //dynamic array of participants that holds the address of participants\cf4 \strokec4 \
\
    \cf9 \strokec9 constructor\cf6 \strokec6 ()\cf4 \strokec4 \
    \cf6 \strokec6 \{\cf4 \strokec4 \
        \cf2 \strokec2 /* msg.sender is a global variable that hold the address of \cf4 \strokec4 \
\cf2 \strokec2             sender when manager deploys the contract its address will\cf4 \strokec4 \
\cf2 \strokec2             be store in the manager state variable.\cf4 \strokec4 \
\cf2 \strokec2             So manager will have full control over the contract bcz\cf4 \strokec4 \
\cf2 \strokec2             he deploys the contract.\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        manager\cf6 \strokec6 =\cf10 \strokec10 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ;\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\
    \cf2 \strokec2 /* we create a payable function by which we will transfer the\cf4 \strokec4 \
\cf2 \strokec2        ethers send by the participants into our smart contract. \cf4 \strokec4 \
\
\cf2 \strokec2        receive() external payable this function is special type of built-in-function\cf4 \strokec4 \
\cf2 \strokec2        that is used to transfer ether to our smart contract.\cf4 \strokec4 \
\
\cf2 \strokec2        when ever a participant send ether it will automattically call \cf4 \strokec4 \
\cf2 \strokec2        this receive funtion and ether is transfered to our contract.\cf4 \strokec4 \
\cf2 \strokec2     */\cf4 \strokec4 \
    \cf9 \strokec9 receive\cf6 \strokec6 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 payable\cf6 \strokec6 \{\cf4 \strokec4 \
\
        \cf2 \strokec2 /*this require is built-in functionality of solidity that is kindof\cf4 \strokec4 \
\cf2 \strokec2         similar to if-else\cf4 \strokec4 \
\cf2 \strokec2         this will check if the participants transfered ether amount>2 if yes\cf4 \strokec4 \
\cf2 \strokec2         particitants address will be pushed in side the participant array\cf4 \strokec4 \
\cf2 \strokec2         else participant is not eligibal to participate. \cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        \cf10 \strokec10 require\cf6 \strokec6 (\cf10 \strokec10 msg\cf6 \strokec6 .\cf4 \strokec4 value\cf6 \strokec6 ==\cf7 \strokec7 2\cf4 \strokec4  ether\cf6 \strokec6 );\cf4 \strokec4  \
        participants\cf6 \strokec6 .\cf4 \strokec4 push\cf6 \strokec6 (\cf8 \strokec8 payable\cf6 \strokec6 (\cf10 \strokec10 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ));\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\
    \cf2 \strokec2 /*function to check balance of our smart contract */\cf4 \strokec4 \
    \cf5 \strokec5 function\cf4 \strokec4  Get_Balance\cf6 \strokec6 ()\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf11 \strokec11 returns\cf6 \strokec6 (\cf5 \strokec5 uint\cf4 \strokec4  \cf6 \strokec6 )\cf4 \strokec4 \
    \cf6 \strokec6 \{\cf4 \strokec4 \
        \cf2 \strokec2 /*\cf4 \strokec4 \
\cf2 \strokec2         only manager can check the contract balance.\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        \cf10 \strokec10 require\cf6 \strokec6 (\cf10 \strokec10 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ==\cf4 \strokec4 manager\cf6 \strokec6 );\cf4 \strokec4 \
        \cf11 \strokec11 return\cf4 \strokec4  \cf5 \strokec5 address\cf6 \strokec6 (\cf12 \strokec12 this\cf6 \strokec6 ).\cf4 \strokec4 balance\cf6 \strokec6 ;\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\
    \cf5 \strokec5 function\cf4 \strokec4  random\cf6 \strokec6 ()\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf11 \strokec11 returns\cf6 \strokec6 (\cf5 \strokec5 uint\cf6 \strokec6 )\cf4 \strokec4 \
    \cf6 \strokec6 \{\cf4 \strokec4 \
        \cf11 \strokec11 return\cf4 \strokec4  \cf5 \strokec5 uint\cf6 \strokec6 (\cf10 \strokec10 keccak256\cf6 \strokec6 (\cf10 \strokec10 abi\cf6 \strokec6 .\cf4 \strokec4 encodePacked\cf6 \strokec6 (\cf10 \strokec10 block\cf6 \strokec6 .\cf4 \strokec4 difficulty\cf6 \strokec6 ,\cf10 \strokec10 block\cf6 \strokec6 .\cf4 \strokec4 timestamp\cf6 \strokec6 ,\cf4 \strokec4 participants\cf6 \strokec6 .\cf4 \strokec4 length\cf6 \strokec6 )));\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\
    \cf5 \strokec5 function\cf4 \strokec4  Select_Winner\cf6 \strokec6 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \
    \cf6 \strokec6 \{\cf4 \strokec4 \
        \cf2 \strokec2 /*\cf4 \strokec4 \
\cf2 \strokec2         Only manager can select the winner.\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        \cf10 \strokec10 require\cf6 \strokec6 (\cf10 \strokec10 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ==\cf4 \strokec4 manager\cf6 \strokec6 );\cf4 \strokec4 \
        \cf2 \strokec2 /*\cf4 \strokec4 \
\cf2 \strokec2         there should be atleast 3 participants to start the lottery.\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        \cf10 \strokec10 require\cf6 \strokec6 (\cf4 \strokec4 participants\cf6 \strokec6 .\cf4 \strokec4 length\cf6 \strokec6 >=\cf7 \strokec7 3\cf6 \strokec6 );\cf4 \strokec4 \
\
        \cf2 \strokec2 /*\cf4 \strokec4 \
\cf2 \strokec2         stores a randon number in r.\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        \cf5 \strokec5 uint\cf4 \strokec4   r\cf6 \strokec6 =\cf4 \strokec4 random\cf6 \strokec6 ();\cf4 \strokec4 \
        \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 payable\cf4 \strokec4  winner\cf6 \strokec6 ;\cf4 \strokec4  \cf2 \strokec2 // hold address of winner account\cf4 \strokec4 \
        \cf2 \strokec2 /*\cf4 \strokec4 \
\cf2 \strokec2         This index variable will store index of winner participant\cf4 \strokec4 \
\cf2 \strokec2         random number mode with total number of participants will give index\cf4 \strokec4 \
\cf2 \strokec2         of winner participants\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        \cf5 \strokec5 uint\cf4 \strokec4  index\cf6 \strokec6 =\cf4 \strokec4  r \cf6 \strokec6 %\cf4 \strokec4  participants\cf6 \strokec6 .\cf4 \strokec4 length\cf6 \strokec6 ;\cf4 \strokec4 \
\
        \cf2 \strokec2 /*\cf4 \strokec4 \
\cf2 \strokec2         stores the address of winning participant in winner variable\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        winner\cf6 \strokec6 =\cf4 \strokec4 participants\cf6 \strokec6 [\cf4 \strokec4 index\cf6 \strokec6 ];\cf4 \strokec4 \
\
        \cf2 \strokec2 /*\cf4 \strokec4 \
\cf2 \strokec2         Tranfer the all the contract balance to the winner account.\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        winner\cf6 \strokec6 .\cf4 \strokec4 transfer\cf6 \strokec6 (\cf4 \strokec4 Get_Balance\cf6 \strokec6 ());\cf4 \strokec4 \
\
        \cf2 \strokec2 /*\cf4 \strokec4 \
\cf2 \strokec2         Resetting the participants array i.e remove all the participants \cf4 \strokec4 \
\cf2 \strokec2         because winner has been selected now we have to remove the participants \cf4 \strokec4 \
\cf2 \strokec2         from our array.\cf4 \strokec4 \
\cf2 \strokec2         */\cf4 \strokec4 \
        participants\cf6 \strokec6 =\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 payable\cf6 \strokec6 [](\cf7 \strokec7 0\cf6 \strokec6 );\cf4 \strokec4 \
    \cf6 \strokec6 \}\cf4 \strokec4 \
\cf6 \strokec6 \}\cf4 \strokec4 \
}